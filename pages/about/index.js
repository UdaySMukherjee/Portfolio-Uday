import React, {useState} from 'react';

export const HTMLlogo = {
  "tag":"svg",
  "attr":{"x":"0px","y":"0px","viewBox":"0 0 50 50"},
  "child":[{
      "tag":"path",
      "attr":{
          "d":"M 5.28125 2 C 4.765625 2.09375 4.410156 2.574219 4.46875 3.09375 L 8 42.53125 C 8.046875 42.933594 8.332031 43.265625 8.71875 43.375 L 24.71875 47.96875 C 24.902344 48.023438 25.097656 48.023438 25.28125 47.96875 L 41.28125 43.375 C 41.667969 43.265625 41.953125 42.933594 42 42.53125 L 45.53125 3.09375 C 45.558594 2.8125 45.464844 2.535156 45.273438 2.324219 C 45.082031 2.117188 44.8125 2 44.53125 2 L 5.46875 2 C 5.4375 2 5.40625 2 5.375 2 C 5.34375 2 5.3125 2 5.28125 2 Z M 6.5625 4 L 43.4375 4 L 40.09375 41.65625 L 25 45.9375 L 9.90625 41.65625 Z M 12.53125 10.0625 C 12.015625 10.15625 11.660156 10.636719 11.71875 11.15625 L 13.0625 25.9375 C 13.09375 26.453125 13.515625 26.859375 14.03125 26.875 L 30 26.875 L 29.5625 31.46875 L 25.03125 32.4375 L 20.4375 31.46875 L 20.28125 29.84375 C 20.25 29.316406 19.808594 28.90625 19.28125 28.90625 L 14.40625 28.90625 C 14.125 28.90625 13.855469 29.023438 13.664063 29.230469 C 13.472656 29.441406 13.378906 29.71875 13.40625 30 L 13.96875 36.125 C 14 36.527344 14.269531 36.875 14.65625 37 L 24.59375 40.03125 L 24.71875 40.0625 C 24.902344 40.117188 25.097656 40.117188 25.28125 40.0625 L 35.34375 37 C 35.742188 36.886719 36.027344 36.539063 36.0625 36.125 L 37.375 21.09375 C 37.402344 20.816406 37.3125 20.542969 37.128906 20.335938 C 36.945313 20.128906 36.683594 20.007813 36.40625 20 L 19.375 20 L 19.125 16.90625 L 36.84375 16.90625 C 37.363281 16.910156 37.796875 16.515625 37.84375 16 L 38.28125 11.15625 C 38.308594 10.875 38.214844 10.597656 38.023438 10.386719 C 37.832031 10.179688 37.5625 10.0625 37.28125 10.0625 L 12.71875 10.0625 C 12.65625 10.054688 12.59375 10.054688 12.53125 10.0625 Z M 13.8125 12.0625 L 36.1875 12.0625 L 35.9375 14.90625 L 18.03125 14.90625 C 17.75 14.90625 17.480469 15.023438 17.289063 15.230469 C 17.097656 15.441406 17.003906 15.71875 17.03125 16 L 17.5 21.09375 C 17.546875 21.597656 17.964844 21.988281 18.46875 22 L 35.3125 22 L 34.125 35.28125 L 25 38.03125 L 15.875 35.28125 L 15.5 30.90625 L 18.375 30.90625 L 18.5 32.375 C 18.53125 32.816406 18.847656 33.183594 19.28125 33.28125 L 24.84375 34.4375 C 24.976563 34.464844 25.117188 34.464844 25.25 34.4375 L 30.71875 33.28125 C 31.152344 33.183594 31.46875 32.816406 31.5 32.375 L 32.09375 25.9375 C 32.109375 25.660156 32.011719 25.390625 31.824219 25.191406 C 31.632813 24.988281 31.371094 24.875 31.09375 24.875 L 14.9375 24.875 Z"
      },
      "child":[]
  }
]}
export const CSSlogo = {
  "tag":"svg",
  "attr":{"x":"0px","y":"0px","viewBox":"0 0 50 50"},
  "child":[{
      "tag":"path",
      "attr":{
          "fillRule":"evenodd",
          "d":"M 39 40 L 25 44 L 11 40 L 8 6 L 42 6 C 41 17.332031 40 28.667969 39 40 Z M 39.816406 8 L 10.183594 8 L 12.871094 38.453125 L 25 41.921875 L 37.128906 38.453125 Z M 16.800781 28 L 20.800781 28 L 20.898438 30.5 L 25 31.898438 L 29.101563 30.5 L 29.398438 26 L 20.601563 26 L 20.398438 22 L 29.601563 22 L 29.898438 18 L 16.101563 18 L 15.800781 14 L 34.101563 14 L 33.601563 22 L 32.898438 33.5 L 25 36.101563 L 17.101563 33.5 Z"
      },
      "child":[]
  }]
}
export const JSlogo = {
  "tag":"svg",
  "attr":{
      "x":"0px",
      "y":"0px",
      "viewBox":"0 0 50 50"
  },
  "child":[{
      "tag":"path",
      "attr":{
          "d":"M 6.667969 4 C 5.207031 4 4 5.207031 4 6.667969 L 4 43.332031 C 4 44.792969 5.207031 46 6.667969 46 L 43.332031 46 C 44.792969 46 46 44.796875 46 43.332031 L 46 6.667969 C 46 5.207031 44.796875 4 43.332031 4 Z M 6.667969 6 L 43.332031 6 C 43.703125 6 44 6.296875 44 6.667969 L 44 43.332031 C 44 43.703125 43.703125 44 43.332031 44 L 6.667969 44 C 6.296875 44 6 43.703125 6 43.332031 L 6 6.667969 C 6 6.296875 6.296875 6 6.667969 6 Z M 23 23 L 23 35.574219 C 23 37.503906 22.269531 38 21 38 C 19.671875 38 18.75 37.171875 18.140625 36.097656 L 15 38 C 15.910156 39.925781 18.140625 42 21.234375 42 C 24.65625 42 27 40.179688 27 36.183594 L 27 23 Z M 35.453125 23 C 32.046875 23 29.863281 25.179688 29.863281 28.042969 C 29.863281 31.148438 31.695313 32.617188 34.449219 33.789063 L 35.402344 34.199219 C 37.140625 34.960938 38 35.425781 38 36.734375 C 38 37.824219 37.171875 38.613281 35.589844 38.613281 C 33.707031 38.613281 32.816406 37.335938 32 36 L 29 38 C 30.121094 40.214844 32.132813 42 35.675781 42 C 39.300781 42 42 40.117188 42 36.683594 C 42 33.496094 40.171875 32.078125 36.925781 30.6875 L 35.972656 30.28125 C 34.335938 29.570313 33.625 29.109375 33.625 27.964844 C 33.625 27.039063 34.335938 26.328125 35.453125 26.328125 C 36.550781 26.328125 37.253906 26.792969 37.90625 27.964844 L 40.878906 26.058594 C 39.625 23.84375 37.878906 23 35.453125 23 Z"
      },
      "child":[]
  }]
}
export const Clogo = {
  "tag":"svg",
  "attr":{"x":"0px","y":"0px","viewBox":"0 0 64 64"},
  "child":[{
      "tag":"path",
      "attr":{"d":"M 32 3.0722656 C 31.31806 3.0722629 30.635544 3.2399841 30.019531 3.5761719 C 25.429648 6.0801083 11.611897 13.617822 7.0214844 16.123047 C 5.7899466 16.794975 5 18.066582 5 19.455078 L 5 44.546875 C 5 45.936315 5.7905401 47.207723 7.0214844 47.878906 L 7.0214844 47.876953 C 11.613467 50.381944 25.428379 57.919745 30.019531 60.423828 C 31.250985 61.096616 32.74649 61.096204 33.978516 60.423828 C 38.570364 57.919911 52.384018 50.384749 56.976562 47.878906 L 56.978516 47.876953 C 58.210007 47.205119 59 45.933418 59 44.544922 L 59 19.453125 C 59 18.06463 58.210278 16.793773 56.978516 16.123047 L 56.976562 16.121094 C 52.382441 13.615503 38.569257 6.0800307 33.978516 3.5761719 C 33.362789 3.239778 32.68194 3.0722684 32 3.0722656 z M 32 5.0761719 C 32.35431 5.0761691 32.709211 5.161425 33.021484 5.3320312 C 37.612279 7.8359191 51.426299 15.371826 56.019531 17.876953 L 56.021484 17.878906 C 56.646235 18.218496 57 18.816565 57 19.453125 L 57 44.544922 C 57 45.181482 56.646507 45.780662 56.021484 46.121094 L 56.019531 46.121094 L 56.019531 46.123047 C 51.428675 48.627969 37.613171 56.16414 33.021484 58.667969 C 32.39551 59.009593 31.603062 59.009181 30.978516 58.667969 C 26.387715 56.164005 12.570533 48.628056 7.9785156 46.123047 L 7.9785156 46.121094 C 7.3534599 45.780324 7 45.183435 7 44.546875 L 7 19.455078 C 7 18.818518 7.353493 18.219338 7.9785156 17.878906 L 7.9804688 17.878906 L 7.9804688 17.876953 C 12.57006 15.372225 26.388399 7.8360948 30.978516 5.3320312 C 31.291503 5.161219 31.64569 5.0761746 32 5.0761719 z M 32 11.994141 C 20.884798 11.994141 11.841797 21.037142 11.841797 32.152344 C 11.841797 43.267545 20.884798 52.310547 32 52.310547 C 39.495685 52.310547 46.040162 48.194332 49.509766 42.109375 A 1.0001 1.0001 0 0 0 49.123047 40.738281 L 33.488281 32.134766 L 48.972656 23.287109 A 1.0001 1.0001 0 0 0 49.337891 21.908203 C 48.36924 20.273802 47.177276 18.787095 45.804688 17.490234 A 1.0001 1.0001 0 1 0 44.431641 18.943359 C 45.419335 19.876561 46.213884 20.992458 46.974609 22.125 L 30.947266 31.283203 A 1.0001 1.0001 0 0 0 30.960938 33.027344 L 47.154297 41.9375 C 43.919551 46.933017 38.395455 50.310547 32 50.310547 C 21.967202 50.310547 13.841797 42.185142 13.841797 32.152344 C 13.841797 22.119545 21.967202 13.994141 32 13.994141 C 32.971266 13.994141 33.922559 14.069861 34.851562 14.216797 A 1.0001 1.0001 0 1 0 35.164062 12.242188 C 34.133066 12.079121 33.076734 11.994141 32 11.994141 z M 38.701172 13.214844 A 1.0001 1.0001 0 0 0 38.384766 15.154297 C 39.528363 15.587291 40.615459 16.131532 41.636719 16.775391 A 1.000281 1.000281 0 0 0 42.705078 15.083984 C 41.572338 14.369843 40.364153 13.764209 39.09375 13.283203 A 1.0001 1.0001 0 0 0 38.701172 13.214844 z M 18.945312 33.789062 A 1.0001 1.0001 0 0 0 18.677734 33.822266 L 16.736328 34.304688 A 1.0002235 1.0002235 0 0 0 17.21875 36.246094 L 19.160156 35.763672 A 1.0001 1.0001 0 0 0 18.945312 33.789062 z M 20.839844 38.183594 A 1.0001 1.0001 0 0 0 20.302734 38.347656 L 18.617188 39.423828 A 1.0001 1.0001 0 1 0 19.693359 41.109375 L 21.378906 40.033203 A 1.0001 1.0001 0 0 0 20.839844 38.183594 z M 24 41.753906 A 1.0001 1.0001 0 0 0 23.251953 42.142578 L 22.007812 43.707031 A 1.0001 1.0001 0 1 0 23.572266 44.951172 L 24.816406 43.386719 A 1.0001 1.0001 0 0 0 24 41.753906 z M 28.201172 43.949219 A 1.0001 1.0001 0 0 0 27.263672 44.677734 L 26.695312 46.59375 A 1.0004825 1.0004825 0 1 0 28.613281 47.164062 L 29.181641 45.246094 A 1.0001 1.0001 0 0 0 28.201172 43.949219 z"},
      "child":[]
  }]
}

export const Cpluspluslogo = {
  "tag":"svg",
  "attr":{
      "x":"0px",
      "y":"0px",
      "viewBox":"0 0 50 50"
  },"child":[{
      "tag":"path",
      "attr":{
          "d":"M 25 2 C 24.285156 2 23.574219 2.179688 22.933594 2.539063 L 6.089844 12.003906 C 4.808594 12.726563 4 14.074219 4 15.535156 L 4 34.464844 C 4 35.929688 4.808594 37.277344 6.089844 38 L 22.933594 47.460938 C 24.214844 48.183594 25.785156 48.183594 27.066406 47.460938 L 43.910156 38 C 45.195313 37.277344 46 35.925781 46 34.464844 L 46 15.535156 C 46 14.074219 45.191406 12.726563 43.910156 12.003906 L 27.066406 2.539063 C 26.425781 2.179688 25.714844 2 25 2 Z M 25 4 C 25.375 4 25.753906 4.09375 26.089844 4.28125 L 42.933594 13.746094 C 43.601563 14.125 44 14.804688 44 15.535156 L 44 24 L 42 24 L 42 22 L 40 22 L 40 24 L 38 24 L 38 26 L 40 26 L 40 28 L 42 28 L 42 26 L 44 26 L 44 34.464844 C 44 35.195313 43.601563 35.875 42.929688 36.253906 L 26.089844 45.71875 C 25.417969 46.09375 24.582031 46.09375 23.910156 45.71875 L 7.070313 36.253906 C 6.398438 35.875 6 35.199219 6 34.464844 L 6 15.535156 C 6 14.804688 6.398438 14.125 7.070313 13.746094 L 23.910156 4.28125 C 24.246094 4.09375 24.625 4 25 4 Z M 25 12 C 17.839844 12 12 17.839844 12 25 C 12 32.160156 17.839844 38 25 38 C 29.089844 38 32.886719 36.09375 35.339844 32.863281 L 36.023438 31.960938 L 29.96875 28.453125 L 29.421875 29.046875 C 28.292969 30.28125 26.691406 31 25 31 C 21.683594 31 19 28.316406 19 25 C 19 21.683594 21.683594 19 25 19 C 26.691406 19 28.292969 19.71875 29.421875 20.953125 L 29.96875 21.546875 L 36.023438 18.039063 L 35.339844 17.136719 C 32.886719 13.90625 29.089844 12 25 12 Z M 25 14 C 28.074219 14 30.886719 15.316406 32.945313 17.511719 L 30.203125 19.097656 C 28.757813 17.832031 26.960938 17 25 17 C 20.597656 17 17 20.597656 17 25 C 17 29.402344 20.597656 33 25 33 C 26.960938 33 28.757813 32.167969 30.203125 30.902344 L 32.945313 32.488281 C 30.886719 34.683594 28.074219 36 25 36 C 18.925781 36 14 31.074219 14 25 C 14 18.925781 18.925781 14 25 14 Z M 33 22 L 33 24 L 31 24 L 31 26 L 33 26 L 33 28 L 35 28 L 35 26 L 37 26 L 37 24 L 35 24 L 35 22 Z"
      },
      "child":[]
  }]
}

export const CSharplogo = {
  "tag":"svg","attr":{"x":"0px","y":"0px","viewBox":"0 0 50 50"},
  "child":[{
      "tag":"path","attr":{"d":"M 25 2 C 24.285156 2 23.574219 2.179688 22.933594 2.539063 L 6.089844 12.003906 C 4.808594 12.726563 4 14.074219 4 15.535156 L 4 34.464844 C 4 35.929688 4.808594 37.277344 6.089844 38 L 22.933594 47.460938 C 24.214844 48.183594 25.785156 48.183594 27.066406 47.460938 L 43.910156 38 C 45.195313 37.277344 46 35.925781 46 34.464844 L 46 15.535156 C 46 14.074219 45.191406 12.726563 43.910156 12.003906 L 27.066406 2.539063 C 26.425781 2.179688 25.714844 2 25 2 Z M 25 4 C 25.375 4 25.753906 4.09375 26.089844 4.28125 L 42.933594 13.746094 C 43.601563 14.125 44 14.804688 44 15.535156 L 44 34.464844 C 44 35.195313 43.601563 35.875 42.929688 36.253906 L 26.089844 45.71875 C 25.417969 46.09375 24.582031 46.09375 23.910156 45.71875 L 7.070313 36.253906 C 6.398438 35.875 6 35.199219 6 34.464844 L 6 15.535156 C 6 14.804688 6.398438 14.125 7.070313 13.746094 L 23.910156 4.28125 C 24.246094 4.09375 24.625 4 25 4 Z M 25 12 C 17.839844 12 12 17.839844 12 25 C 12 32.160156 17.839844 38 25 38 C 29.089844 38 32.886719 36.09375 35.339844 32.863281 L 36.023438 31.960938 L 29.96875 28.453125 L 29.421875 29.046875 C 28.292969 30.28125 26.691406 31 25 31 C 21.683594 31 19 28.316406 19 25 C 19 21.683594 21.683594 19 25 19 C 26.691406 19 28.292969 19.71875 29.421875 20.953125 L 29.96875 21.546875 L 36.023438 18.039063 L 35.339844 17.136719 C 32.886719 13.90625 29.089844 12 25 12 Z M 25 14 C 28.074219 14 30.886719 15.316406 32.945313 17.511719 L 30.203125 19.097656 C 28.757813 17.832031 26.960938 17 25 17 C 20.597656 17 17 20.597656 17 25 C 17 29.402344 20.597656 33 25 33 C 26.960938 33 28.757813 32.167969 30.203125 30.902344 L 32.945313 32.488281 C 30.886719 34.683594 28.074219 36 25 36 C 18.925781 36 14 31.074219 14 25 C 14 18.925781 18.925781 14 25 14 Z M 35 20 L 35 22 L 33 22 L 33 24 L 35 24 L 35 26 L 33 26 L 33 28 L 35 28 L 35 30 L 37 30 L 37 28 L 39 28 L 39 30 L 41 30 L 41 28 L 43 28 L 43 26 L 41 26 L 41 24 L 43 24 L 43 22 L 41 22 L 41 20 L 39 20 L 39 22 L 37 22 L 37 20 Z M 37 24 L 39 24 L 39 26 L 37 26 Z"},
  "child":[]
  }]
}

export const Pythonlogo = {
  "tag":"svg",
  "attr":{"x":"0px","y":"0px","viewBox":"0 0 50 50"},
  "child":[{
      "tag":"path",
      "attr":{"d":"M 25 2 C 20.94188 2 18.198605 2.9658493 16.449219 4.3710938 C 14.699833 5.7763381 14 7.5940538 14 9.0996094 L 14 14 L 24 14 L 24 15 L 9.0996094 15 C 7.2700395 15 5.4173831 15.805112 4.1015625 17.482422 C 2.7857419 19.159732 2 21.64375 2 25 C 2 28.35625 2.7857419 30.840268 4.1015625 32.517578 C 5.4173831 34.194888 7.2700395 35 9.0996094 35 L 14 35 L 14 40.900391 C 14 42.405946 14.699833 44.223662 16.449219 45.628906 C 18.198605 47.034151 20.94188 48 25 48 C 29.05812 48 31.801395 47.034151 33.550781 45.628906 C 35.300167 44.223662 36 42.405946 36 40.900391 L 36 36 L 26 36 L 26 35 L 40.900391 35 C 42.729961 35 44.582617 34.194888 45.898438 32.517578 C 47.214258 30.840268 48 28.35625 48 25 C 48 21.64375 47.214258 19.159732 45.898438 17.482422 C 44.582617 15.805112 42.729961 15 40.900391 15 L 36 15 L 36 9.0996094 C 36 7.556276 35.299913 5.7238872 33.546875 4.3300781 C 31.793837 2.936269 29.053846 2 25 2 z M 25 4 C 28.746154 4 31.005773 4.8633404 32.302734 5.8945312 C 33.599696 6.9257221 34 8.1429427 34 9.0996094 L 34 15 L 34 21 C 34 22.447727 32.96946 23.659304 31.603516 23.939453 C 31.408381 23.979474 31.206818 24 31 24 L 19 24 C 16.254545 24 14 26.254545 14 29 L 14 33 L 9.0996094 33 C 7.8291793 33 6.6330075 32.505893 5.6738281 31.283203 C 4.7146488 30.060513 4 28.04375 4 25 C 4 21.95625 4.7146488 19.939487 5.6738281 18.716797 C 6.6330075 17.494107 7.8291793 17 9.0996094 17 L 26 17 L 26 12 L 16 12 L 16 9.0996094 C 16 8.2051649 16.400558 6.974443 17.701172 5.9296875 C 19.001786 4.884932 21.25812 4 25 4 z M 20 7 C 18.9 7 18 7.9 18 9 C 18 10.1 18.9 11 20 11 C 21.1 11 22 10.1 22 9 C 22 7.9 21.1 7 20 7 z M 36 17 L 40.900391 17 C 42.170821 17 43.366993 17.494107 44.326172 18.716797 C 45.285351 19.939487 46 21.95625 46 25 C 46 28.04375 45.285351 30.060513 44.326172 31.283203 C 43.366993 32.505893 42.170821 33 40.900391 33 L 24 33 L 24 38 L 34 38 L 34 40.900391 C 34 41.794835 33.599442 43.025557 32.298828 44.070312 C 30.998214 45.115068 28.74188 46 25 46 C 21.25812 46 19.001786 45.115068 17.701172 44.070312 C 16.400558 43.025557 16 41.794835 16 40.900391 L 16 29 C 16 28.793182 16.020526 28.591619 16.060547 28.396484 C 16.340696 27.03054 17.552273 26 19 26 L 31 26 C 31.171591 26 31.340487 25.991792 31.507812 25.974609 C 34.017689 25.716864 36 23.573864 36 21 L 36 17 z M 30 39 C 28.9 39 28 39.9 28 41 C 28 42.1 28.9 43 30 43 C 31.1 43 32 42.1 32 41 C 32 39.9 31.1 39 30 39 z"},
      "child":[]
  }] 
}

export const Arduinologo = {
  "tag":"svg",
  "attr":{"x":"0px","y":"0px","viewBox":"0 0 50 50"},
  "child":[{
      "tag":"path","attr":{"d":"M 11.59375 13.40625 C 5.234375 13.40625 0 18.636719 0 25 C 0 31.363281 5.234375 36.59375 11.59375 36.59375 C 16.261719 36.59375 20.007813 33.804688 22.59375 31.21875 C 23.570313 30.242188 24.347656 29.308594 25 28.46875 C 25.652344 29.308594 26.429688 30.242188 27.40625 31.21875 C 29.992188 33.804688 33.738281 36.59375 38.40625 36.59375 C 44.765625 36.59375 50 31.363281 50 25 C 50 18.636719 44.769531 13.40625 38.40625 13.40625 C 33.738281 13.40625 29.992188 16.195313 27.40625 18.78125 C 26.429688 19.757813 25.652344 20.691406 25 21.53125 C 24.363281 20.699219 23.613281 19.777344 22.65625 18.8125 C 20.089844 16.21875 16.335938 13.40625 11.59375 13.40625 Z M 11.59375 17.40625 C 14.710938 17.40625 17.636719 19.425781 19.8125 21.625 C 21.171875 22.996094 22.027344 24.132813 22.59375 24.96875 C 22.015625 25.800781 21.152344 26.972656 19.75 28.375 C 17.542969 30.582031 14.59375 32.59375 11.59375 32.59375 C 7.414063 32.59375 4 29.179688 4 25 C 4 20.820313 7.414063 17.40625 11.59375 17.40625 Z M 38.40625 17.40625 C 42.585938 17.40625 46 20.820313 46 25 C 46 29.179688 42.585938 32.59375 38.40625 32.59375 C 35.40625 32.59375 32.457031 30.582031 30.25 28.375 C 28.875 27 28.019531 25.839844 27.4375 25 C 28.019531 24.160156 28.875 23 30.25 21.625 C 32.457031 19.417969 35.40625 17.40625 38.40625 17.40625 Z M 36 20 L 36 23 L 33 23 L 33 27 L 36 27 L 36 30 L 40 30 L 40 27 L 43 27 L 43 23 L 40 23 L 40 20 Z M 7 23 L 7 27 L 17 27 L 17 23 Z"},
      "child":[]
  }]
}

export const OpenCVlogo = {
  "tag":"svg",
  "attr":{"x":"0px","y":"0px","viewBox":"0 0 48 48"},
  "child":[{
      "tag":"path",
      "attr":{"d":"M35,43c-5.514,0-10-4.486-10-10c0-3.562,1.916-6.88,5-8.66l3,5.196c-1.233,0.712-2,2.039-2,3.464 c0,2.168,1.832,4,4,4s4-1.832,4-4c0-1.425-0.767-2.752-2-3.464l3-5.196c3.084,1.78,5,5.099,5,8.66C45,38.514,40.514,43,35,43z"},
      "child":[]
  },{
      "tag":"path","attr":{"d":"M29,22.629l-3-5.196c1.233-0.712,2-2.04,2-3.464c0-2.168-1.832-4-4-4s-4,1.832-4,4 c0,1.425,0.767,2.752,2,3.464l-3,5.196c-3.084-1.781-5-5.1-5-8.661c0-5.514,4.486-10,10-10s10,4.486,10,10 C34,17.53,32.084,20.849,29,22.629z"},
      "child":[]
  },{
      "tag":"path",
      "attr":{"d":"M13.001,43.028c-3.459,0-6.827-1.793-8.678-4.997c-2.757-4.776-1.115-10.903,3.66-13.661 c3.085-1.781,6.917-1.781,10,0l-3,5.196c-1.234-0.713-2.766-0.713-4,0c-1.878,1.084-2.548,3.586-1.465,5.464 c1.084,1.877,3.586,2.549,5.465,1.464c1.233-0.712,2-2.04,2-3.464h6c0,3.561-1.916,6.879-5,8.66 C16.413,42.598,14.695,43.028,13.001,43.028z"},
      "child":[]
  }]
}

export const Pytorchlogo = {
  "tag":"svg",
  "attr":{"x":"0px","y":"0px","viewBox":"0 0 48 48"},
  "child":[{"tag":"linearGradient",
  "attr":{"id":"hqBdiw7hWbh_bf9we5wHOa_jH4BpkMnRrU5_gr1","x1":"18.6","x2":"29.117","y1":"10.403","y2":"42.736","gradientUnits":"userSpaceOnUse"},
  "child":[{
      "tag":"stop","attr":{"offset":"0","stopColor":"#f44f5a"},"child":[]},
      {"tag":"stop","attr":{"offset":".443","stopColor":"#ee3d4a"},"child":[]},
      {"tag":"stop","attr":{"offset":"1","stopColor":"#e52030"},"child":[]}
  ]},
  {"tag":"path","attr":{
      "d":"M36.277,15.251C39.276,18.384,41,22.571,41,27c0,9.374-7.626,17-17,17S7,36.374,7,27\tc0-8.518,8.812-15.984,15.894-21.983c0.379-0.321,0.74-0.629,1.106-0.941v5.25C17.865,14.559,11,20.837,11,27\tc0,7.168,5.832,13,13,13s13-5.832,13-13c0-3.428-1.363-6.657-3.709-9.062L36.277,15.251z M30,10c-1.105,0-2,0.895-2,2s0.895,2,2,2\ts2-0.895,2-2S31.105,10,30,10z"},
      "child":[]
  }]
}

export const Raspberrypilogo = {
  "tag":"svg","attr":{
  "viewBox":"-2.5 0 24 24"},
  "child":[{
    "tag":"path","attr":{
      "d":"m13.656 17.338c-.857.989-1.334 2.79-.709 3.371.6.449 2.2.391 3.385-1.23.344-.487.551-1.093.551-1.747 0-.603-.175-1.164-.477-1.637l.007.012c-.73-.555-1.778.164-2.757 1.243zm-8.057.3c-.908-1.04-2.088-1.658-2.851-1.2-.51.382-.605 1.685.123 2.967 1.078 1.524 2.6 1.679 3.221 1.307.659-.488.3-2.137-.493-3.075zm4.105 3.145c-1.1-.026-2.8.439-2.776 1.032-.018.4 1.331 1.572 2.7 1.513 1.326.03 2.7-1.139 2.682-1.649s-1.5-.927-2.607-.884zm-.075-13.944c-1.275-.032-2.5.933-2.5 1.493 0 .68 1.008 1.376 2.51 1.394 1.543.01 2.518-.559 2.532-1.26.016-.794-1.394-1.639-2.518-1.627zm-3.071.532c-2.135-.345-3.913.9-3.842 3.192.07.884 4.63-3.041 3.843-3.177v-.015zm9.749 3.251c.071-2.277-1.709-3.521-3.844-3.176-.787.135 3.772 4.061 3.844 3.176zm.364.824c-1.239-.329-.42 5.049.588 4.615.551-.525.894-1.265.894-2.084 0-1.077-.592-2.015-1.468-2.508l-.014-.007v-.015zm-14.9 4.675c1.007.45 1.827-4.929.589-4.6-.891.504-1.483 1.445-1.483 2.525 0 .821.343 1.563.893 2.089l.001.001zm9.415-5.948c-.63.49-1.032 1.249-1.032 2.101 0 .624.215 1.197.575 1.65l-.004-.005c.492.838 1.388 1.392 2.414 1.392.467 0 .908-.115 1.295-.318l-.015.007c.631-.49 1.034-1.248 1.034-2.101 0-.624-.215-1.197-.576-1.65l.004.005c-.484-.835-1.374-1.388-2.393-1.388-.476 0-.923.121-1.314.333l.015-.007zm-3.1.135c-.373-.199-.816-.315-1.286-.315-1.02 0-1.911.548-2.395 1.366l-.007.013c-.357.45-.572 1.026-.572 1.652 0 .855.402 1.616 1.027 2.105l.006.004c.376.205.823.325 1.298.325 1.019 0 1.909-.553 2.386-1.376l.007-.013c.352-.448.564-1.019.564-1.64 0-.853-.4-1.612-1.024-2.1l-.006-.004zm4.369 7.162c-.077-1.399-1.23-2.504-2.641-2.504-.049 0-.098.001-.147.004h.007c-.028-.001-.062-.002-.095-.002-1.423 0-2.585 1.119-2.653 2.526v.006.029c.078 1.399 1.232 2.504 2.643 2.504.049 0 .098-.001.147-.004h-.007c.035.002.076.003.117.003 1.413 0 2.566-1.116 2.625-2.514v-.005-.029l.01-.015zm3.215-15.133c-1.69.771-3.14 1.756-4.396 2.945l.007-.007c.377 1.5 2.344 1.558 3.063 1.512-.139-.044-.251-.141-.314-.266l-.001-.003c.18-.12.821-.016 1.268-.255-.171-.03-.252-.061-.329-.2.432-.095.813-.255 1.156-.472l-.015.009c-.033.005-.07.009-.109.009-.132 0-.256-.037-.361-.1l.003.002c.419-.179.779-.4 1.103-.664l-.008.006c-.2 0-.406 0-.466-.075.336-.197.625-.429.875-.698l.002-.002c-.272.045-.39.016-.454-.03.295-.226.544-.494.742-.798l.007-.012c-.076.04-.166.063-.261.063s-.185-.023-.264-.064l.003.002c.091-.194.47-.314.69-.779-.073.019-.157.031-.243.031s-.17-.011-.25-.032l.007.002c.093-.328.242-.613.439-.859l-.004.005c-.095.004-.206.006-.318.006-.281 0-.558-.013-.832-.038l.035.003.283-.285c-.124-.024-.266-.038-.412-.038-.297 0-.58.058-.839.164l.015-.005c-.149-.105 0-.255.185-.4-.385.05-.734.138-1.065.262l.033-.011c-.164-.15.1-.285.24-.436-.413.071-.781.218-1.106.427l.012-.007c-.18-.165-.015-.314.1-.449-.354.137-.657.33-.916.57l.002-.002c-.09-.1-.209-.179-.06-.449-.291.162-.535.373-.73.624l-.004.005c-.194-.134-.119-.3-.119-.449-.285.253-.545.518-.785.8l-.009.011c-.061-.031-.1-.15-.135-.346-.779.75-1.889 2.623-.285 3.356 1.36-1.066 2.949-1.919 4.672-2.47l.107-.03.041-.075zm-12.259 0c1.831.583 3.42 1.441 4.808 2.542l-.031-.024c1.6-.75.493-2.623-.282-3.356-.041.194-.085.329-.135.359-.249-.292-.507-.557-.78-.803l-.008-.007c0 .15.077.33-.117.45-.193-.258-.434-.469-.71-.624l-.011-.006c.149.256.025.33-.056.449-.247-.258-.547-.462-.883-.594l-.017-.006c.12.149.3.3.12.465-.309-.203-.673-.35-1.064-.417l-.017-.002c.135.149.4.3.238.45-.301-.12-.65-.211-1.014-.256l-.021-.002c.181.15.342.289.192.4-.251-.11-.543-.173-.849-.173-.143 0-.284.014-.419.04l.014-.002.284.284c-.242.026-.523.041-.807.041-.11 0-.22-.002-.33-.007l.016.001c.199.238.35.525.432.839l.003.015c-.045.045-.27.016-.483 0 .225.449.6.57.688.765-.076.041-.166.065-.261.065s-.186-.024-.264-.066l.003.001c.219.307.465.573.741.805l.007.005c-.083.039-.181.061-.283.061-.064 0-.127-.009-.186-.025l.005.001c.251.269.537.5.851.69l.018.01c-.06.07-.271.069-.479.075.315.26.676.483 1.065.652l.029.011c-.102.071-.228.113-.365.113-.035 0-.07-.003-.104-.008h.004c.327.21.708.371 1.116.46l.023.004c-.071.118-.198.197-.344.2.449.254 1.078.135 1.258.27-.064.128-.175.225-.31.269l-.004.001c.719.045 2.7-.015 3.072-1.514-1.248-1.177-2.699-2.157-4.292-2.877l-.099-.04.04.016zm1.734-2.237c.243.033.463.103.664.205l-.012-.005c.529-.17.65.063.91.159.577-.12.752.141 1.029.419l.322-.009c.707.489 1.225 1.206 1.451 2.044l.006.025c.231-.862.749-1.579 1.445-2.057l.012-.008.321.007c.277-.28.452-.539 1.029-.418.261-.1.38-.33.911-.166.33-.1.62-.375 1.057-.045.131-.076.289-.121.457-.121.224 0 .429.08.589.213l-.001-.001c.5-.06.653.061.774.21.108 0 .809-.1 1.132.36.81-.09 1.064.464.774.988.114.121.185.284.185.464 0 .204-.091.387-.234.511l-.001.001c.15.269.062.553-.27.913.014.055.023.117.023.182 0 .284-.159.53-.393.655l-.004.002c.06.51-.48.81-.629.914-.061.3-.181.584-.8.734-.089.449-.464.523-.824.614 1.309.619 2.199 1.929 2.199 3.446 0 .1-.004.2-.012.298l.001-.013.181.3c.991.664 1.634 1.779 1.634 3.045 0 .953-.365 1.821-.963 2.472l.002-.003c-.139.635-.315 1.186-.535 1.713l.024-.065c-.211 1.48-1.197 2.687-2.528 3.209l-.027.01c-.697.564-1.506 1.025-2.384 1.344l-.058.019c-.745.815-1.809 1.328-2.993 1.337h-.094c-1.191-.007-2.262-.519-3.009-1.332l-.003-.003c-.938-.339-1.748-.801-2.463-1.378l.016.013c-1.358-.533-2.346-1.739-2.559-3.197l-.003-.022c-.198-.465-.376-1.021-.505-1.595l-.013-.067c-.599-.649-.966-1.519-.966-2.475 0-1.265.644-2.38 1.621-3.036l.013-.008.172-.3c-.007-.085-.011-.184-.011-.284 0-1.517.889-2.827 2.176-3.436l.023-.01c-.359-.09-.72-.165-.823-.615-.615-.15-.735-.434-.8-.734-.15-.105-.689-.4-.629-.928-.239-.13-.399-.38-.399-.667 0-.067.009-.131.025-.193l-.001.005c-.314-.346-.4-.645-.27-.915-.144-.123-.234-.305-.234-.508 0-.181.072-.346.189-.466-.285-.525-.03-1.094.779-1 .317-.465 1.023-.359 1.126-.359.121-.15.285-.285.779-.225.162-.133.371-.214.599-.214.165 0 .32.042.455.116l-.005-.002c.108-.097.249-.159.405-.166h.001z"
    },"child":[]}]}

export const UiPathlogo = {"tag":"svg","attr":{"viewBox":"0 0 24 24"},"child":[{"tag":"path","attr":{"d":"M21 13.293V3h-8V1H8v2H3v4h1V4h4v2h5V4h7v9.293L17.707 11l-.707.707 3.5 3.5 3.5-3.5-.707-.707zM12 5H9V2h3zm8 15h-3v-2h-5v2H4v-9.293L6.293 13 7 12.293l-3.5-3.5-3.5 3.5.707.707L3 10.707V21h9v2h5v-2h4v-4h-1zm-4 2h-3v-3h3z"},"child":[]},{"tag":"path","attr":{"fill":"none","d":"M0 0h24v24H0z"},"child":[]}]}

export const ArduPilotlogo = {"tag":"svg","attr":{"viewBox":"0 0 100 100","ariaHidden":"true","role":"img","preserveAspectRatio":"xMidYMid meet"},"child":[{"tag":"path","attr":{
  "d":"M19.53 28.49a3.852 3.852 0 0 0-3.533 2.343C6.706 31.364-.029 32.257 0 32.955c.027.693 6.712.997 15.928.724c.32.862.936 1.58 1.738 2.027H16.17v2.742h-1.83a.874.874 0 0 0-.875.874v1.954c0 .483.391.874.874.874h12.316c3.103.73 3.45 1.843 5.774 3.88c-.38 2.113-.94 4.42-1.378 6.414v16.973a2.092 2.092 0 1 0 4.185 0V61.21c-.048-6.9 1.066-9.69 4.905-15.031l.965-.448c0 4.146 2.866 4.395 6.908 5.32h-3.036c-.924 0-1.674.75-1.674 1.675v10c0 .924.75 1.674 1.674 1.674h10.044c.924 0 1.674-.75 1.674-1.674v-10c0-.925-.75-1.674-1.674-1.674h-3.033c4.041-.928 6.905-1.176 6.905-5.321l.965.448c4.857 5.026 4.905 8.447 4.905 15.03v8.207a2.092 2.092 0 0 0 4.185 0V52.444c-.513-2.191-1.062-4.487-1.58-6.762c2.199-2.155 3.101-2.64 5.956-3.532h12.336a.874.874 0 0 0 .874-.874v-1.954a.874.874 0 0 0-.874-.874H83.83v-2.742h-1.496a3.852 3.852 0 0 0 1.738-2.027c9.216.273 15.901-.031 15.928-.724c.029-.698-6.706-1.59-15.997-2.122a3.852 3.852 0 0 0-6.943-.302c-9.307-.283-16.103.018-16.142.716c-.029.693 6.615 1.58 15.827 2.112a3.852 3.852 0 0 0 1.839 2.347h-1.496v2.742C67.654 38.426 60.352 33.685 50 33.49c-10.003.212-18.38 4.958-27.088 4.958v-2.742h-1.496a3.852 3.852 0 0 0 1.839-2.347c9.212-.532 15.856-1.42 15.827-2.112c-.039-.698-6.835-1-16.142-.716a3.852 3.852 0 0 0-3.41-2.04zM50 53.503c2.347 0 4.276 1.929 4.276 4.276c0 2.347-1.929 4.277-4.276 4.277c-2.347 0-4.278-1.93-4.278-4.277c0-2.347 1.93-4.276 4.278-4.276zm0 2.51c-.99 0-1.767.776-1.767 1.766s.777 1.766 1.767 1.766c.99 0 1.765-.776 1.765-1.766S50.99 56.013 50 56.013z"},
  "child":[]}]}

export const LinkedinLine = {"tag":"svg","attr":{"viewBox":"0 0 24 24","dataName":"Layer 1"},"child":[{"tag":"path","attr":{"d":"M20.47,2H3.53A1.45,1.45,0,0,0,2.06,3.43V20.57A1.45,1.45,0,0,0,3.53,22H20.47a1.45,1.45,0,0,0,1.47-1.43V3.43A1.45,1.45,0,0,0,20.47,2ZM8.09,18.74h-3v-9h3ZM6.59,8.48h0a1.56,1.56,0,1,1,0-3.12,1.57,1.57,0,1,1,0,3.12ZM18.91,18.74h-3V13.91c0-1.21-.43-2-1.52-2A1.65,1.65,0,0,0,12.85,13a2,2,0,0,0-.1.73v5h-3s0-8.18,0-9h3V11A3,3,0,0,1,15.46,9.5c2,0,3.45,1.29,3.45,4.06Z"},"child":[]}]}
export const GithubLine = {"tag":"svg","attr":{"viewBox":"0 0 24 24","dataName":"Layer 1"},"child":[{"tag":"path","attr":{"d":"M12,2.2467A10.00042,10.00042,0,0,0,8.83752,21.73419c.5.08752.6875-.21247.6875-.475,0-.23749-.01251-1.025-.01251-1.86249C7,19.85919,6.35,18.78423,6.15,18.22173A3.636,3.636,0,0,0,5.125,16.8092c-.35-.1875-.85-.65-.01251-.66248A2.00117,2.00117,0,0,1,6.65,17.17169a2.13742,2.13742,0,0,0,2.91248.825A2.10376,2.10376,0,0,1,10.2,16.65923c-2.225-.25-4.55-1.11254-4.55-4.9375a3.89187,3.89187,0,0,1,1.025-2.6875,3.59373,3.59373,0,0,1,.1-2.65s.83747-.26251,2.75,1.025a9.42747,9.42747,0,0,1,5,0c1.91248-1.3,2.75-1.025,2.75-1.025a3.59323,3.59323,0,0,1,.1,2.65,3.869,3.869,0,0,1,1.025,2.6875c0,3.83747-2.33752,4.6875-4.5625,4.9375a2.36814,2.36814,0,0,1,.675,1.85c0,1.33752-.01251,2.41248-.01251,2.75,0,.26251.1875.575.6875.475A10.0053,10.0053,0,0,0,12,2.2467Z"},"child":[]}]}
export const InstagramLine = {"tag":"svg","attr":{"viewBox":"-2 -2 24 24","preserveAspectRatio":"xMinYMin"},"child":[{"tag":"path","attr":{"d":"M14.017 0h-8.07A5.954 5.954 0 0 0 0 5.948v8.07a5.954 5.954 0 0 0 5.948 5.947h8.07a5.954 5.954 0 0 0 5.947-5.948v-8.07A5.954 5.954 0 0 0 14.017 0zm3.94 14.017a3.94 3.94 0 0 1-3.94 3.94h-8.07a3.94 3.94 0 0 1-3.939-3.94v-8.07a3.94 3.94 0 0 1 3.94-3.939h8.07a3.94 3.94 0 0 1 3.939 3.94v8.07z"},"child":[]},{"tag":"path","attr":{"d":"M9.982 4.819A5.17 5.17 0 0 0 4.82 9.982a5.17 5.17 0 0 0 5.163 5.164 5.17 5.17 0 0 0 5.164-5.164A5.17 5.17 0 0 0 9.982 4.82zm0 8.319a3.155 3.155 0 1 1 0-6.31 3.155 3.155 0 0 1 0 6.31z"},"child":[]},{"tag":"circle","attr":{"cx":"15.156","cy":"4.858","r":"1.237"},"child":[]}]}
export const FacebookLine = {"tag":"svg","attr":{"viewBox":"0 0 24 24","dataName":"Layer 1"},"child":[{"tag":"path","attr":{"d":"M20.9,2H3.1A1.1,1.1,0,0,0,2,3.1V20.9A1.1,1.1,0,0,0,3.1,22h9.58V14.25h-2.6v-3h2.6V9a3.64,3.64,0,0,1,3.88-4,20.26,20.26,0,0,1,2.33.12v2.7H17.3c-1.26,0-1.5.6-1.5,1.47v1.93h3l-.39,3H15.8V22h5.1A1.1,1.1,0,0,0,22,20.9V3.1A1.1,1.1,0,0,0,20.9,2Z"},"child":[]}]}
export const YoutubeLine = {"tag":"svg","attr":{"viewBox":"0 0 24 24","dataName":"Layer 1"},"child":[{"tag":"path","attr":{"d":"M23,9.71a8.5,8.5,0,0,0-.91-4.13,2.92,2.92,0,0,0-1.72-1A78.36,78.36,0,0,0,12,4.27a78.45,78.45,0,0,0-8.34.3,2.87,2.87,0,0,0-1.46.74c-.9.83-1,2.25-1.1,3.45a48.29,48.29,0,0,0,0,6.48,9.55,9.55,0,0,0,.3,2,3.14,3.14,0,0,0,.71,1.36,2.86,2.86,0,0,0,1.49.78,45.18,45.18,0,0,0,6.5.33c3.5.05,6.57,0,10.2-.28a2.88,2.88,0,0,0,1.53-.78,2.49,2.49,0,0,0,.61-1,10.58,10.58,0,0,0,.52-3.4C23,13.69,23,10.31,23,9.71ZM9.74,14.85V8.66l5.92,3.11C14,12.69,11.81,13.73,9.74,14.85Z"},"child":[]}]}
export const TwitterLine = {"tag":"svg","attr":{"viewBox":"0 0 24 24","dataName":"Layer 1"},"child":[{"tag":"path","attr":{"d":"M22,5.8a8.49,8.49,0,0,1-2.36.64,4.13,4.13,0,0,0,1.81-2.27,8.21,8.21,0,0,1-2.61,1,4.1,4.1,0,0,0-7,3.74A11.64,11.64,0,0,1,3.39,4.62a4.16,4.16,0,0,0-.55,2.07A4.09,4.09,0,0,0,4.66,10.1,4.05,4.05,0,0,1,2.8,9.59v.05a4.1,4.1,0,0,0,3.3,4A3.93,3.93,0,0,1,5,13.81a4.9,4.9,0,0,1-.77-.07,4.11,4.11,0,0,0,3.83,2.84A8.22,8.22,0,0,1,3,18.34a7.93,7.93,0,0,1-1-.06,11.57,11.57,0,0,0,6.29,1.85A11.59,11.59,0,0,0,20,8.45c0-.17,0-.35,0-.53A8.43,8.43,0,0,0,22,5.8Z"},"child":[]}]}


import { GenIcon } from 'react-icons';
export const C = props => GenIcon(Clogo)(props);
export const Cplusplus = props => GenIcon(Cpluspluslogo)(props);
export const CSharp = props => GenIcon(CSharplogo)(props);
export const Python = props => GenIcon(Pythonlogo)(props);
export const JS = props => GenIcon(JSlogo)(props);
export const HTML = props => GenIcon(HTMLlogo)(props);
export const CSS = props => GenIcon(CSSlogo)(props);
export const OPENCV = props => GenIcon(OpenCVlogo)(props);
export const PYTORCH = props => GenIcon(Pytorchlogo)(props);
export const ARDUINO = props => GenIcon(Arduinologo)(props);
export const UIPATH = props => GenIcon(UiPathlogo)(props);
export const ARDUPILOT = props => GenIcon(ArduPilotlogo)(props);
export const RASPBERRYPI = props => GenIcon(Raspberrypilogo)(props);
export const Linkedin = props => GenIcon(LinkedinLine)(props);
export const Instagram = props => GenIcon(InstagramLine)(props);
export const Facebook = props => GenIcon(FacebookLine)(props);
export const Github = props => GenIcon(GithubLine)(props);
export const Twitter = props => GenIcon(TwitterLine)(props);
export const Youtube = props => GenIcon(YoutubeLine)(props);

//  data
const aboutData = [
  {
    title: 'skills',
    info: [
      {
        title: 'Programming Languages',
        icons: [
          <C size={40}/>,
          <Cplusplus size={40}/>,
          <CSharp size={40}/>,
          <Python size={40}/>,
        ],
      },
      {
        title: 'IOT',
        icons: [
          <ARDUINO size={40}/>,
          <RASPBERRYPI size={40}/>,
          <UIPATH size={40}/>,
          <ARDUPILOT size={40}/>,
        ],
      },
      {
        title: 'AI/ML',
        icons: [
          <PYTORCH size={40}/>, 
          <OPENCV size={40}/>,
        ],
      },
      {
        title: 'Frontend Development',
        icons: [
          <HTML size={40}/>,
          <CSS size={40}/>,
          <JS size={40}/>,
        ],
      },
    ],
  },
  {
    title: 'Patents',
    info: [
      {
        title: 'IOT BASED MODULAR AIR QUALITY MONITORING SYSTEM',
        stage: (
        <>
          <b>Application no. :</b> 202231024776 <br />
          <b>Filed on :</b> Apr 28, 2022 <br />
          <br />
          AERO is an innovative IoT-based modular air quality monitoring system that allows users to customize their setup, remotely monitor air quality, and receive timely notifications. With its portability, sensor accuracy, and user-friendly features, AERO empowers individuals to make informed decisions, promoting a healthier environment
      </>
        ),
      },
    ],
  },
  {
    title: 'Certificates',
    info: [
      {
        title: 'Computer Vision and Image Processing Fundamentals, NPTEL',
        stage: '- Apr 2023',
      },
      {
        title: 'Interfacing with the Arduino, Coursera',
        stage: '- Dec 2022',
      },
      {
        title: 'Programming Data Structures and Algorithm using Python, NPTEL',
        stage: '- Apr 2022',
      },
      {
        title: 'The Joy of Computing using Python, NPTEL',
        stage: '- Apr 2022',
      },
    ],
  },
  {
    title: 'Socials',
    info: [
      {
        title: 'LinkedIn',
        link: 'https://www.linkedin.com/in/usm003/',
        icons: [<Linkedin size={40}/>,]
      },
      {
        title: 'Instagram',
        link: 'https://www.instagram.com/shadow.senpai.1108/',
        icons: [<Instagram size={40}/>,]
      },
      {
        title: 'Facebook',
        link: 'https://www.facebook.com/udaysankar.mukherjee.319/',
        icons: [<Facebook size={40}/>,]
      },
      {
        title: 'Twitter',
        link: 'https://twitter.com/F2Uday',
        icons: [<Twitter size={40}/>,]
      },
      {
        title: 'Github',
        link: 'https://github.com/UdaySMukherjee',
        icons: [<Github size={40}/>,]
      },

      {
        title: 'Youtube',
        link: 'https://www.youtube.com/channel/UCfEboeu1CzRO-1pmRa7ETsA',
        icons: [<Youtube size={40}/>,]
      },
    ],
  }
];

//components
import Avatar from '../../components/Avatar';
import Circles from '../../components/Circles';

// framer motion
import {motion} from 'framer-motion';
import {fadeIn} from '../../variants';


const About = () => {
  const [index, setIndex] = useState(0);
  console.log(index);
  return( 
    
    <div className='h-full bg-primary/30 py-32 text-center xl:text-left'>
      <Circles/>
      {/*avatar img */}
      <motion.div
        variants={fadeIn('right', 0.2)}
        initial='hidden'
        animate='show'
        exit='hidden'
        className='hidden xl:flex absolute bottom-0 -left-[370px]'
      >
        <Avatar />
      </motion.div>
      <div className='container mx-auto h-full flex flex-col items-center xl:flex-row 
      gap-x-6'>
        {/*text */}
        <div className='flex-1 flex flex-col justify-center'>
          <motion.h2
            variants={fadeIn('right', 0.2)}
            initial='hidden'
            animate='show'
            exit='hidden'
            className='h2'
          >
            RPA Developer and <br/><span className='text-accent'>Robotics - IOT</span> Enthutiast.
          </motion.h2>
          <motion.p 
            variants={fadeIn('right', 0.4)}
            initial='hidden'
            animate='show'
            exit='hidden'
            className='max-w-[500px] mx-auto xl:mx-0 mb-6 xl:mb-12 px-2 xl:px-0'
          >
            I am a passionate RPA developer, robotics and IoT enthusiast, junior researcher, and future IEM’25
            graduate who thrives on creating innovative hardware projects while mastering microcontrollers and
            microprocessors.
          </motion.p>
        </div>
        {/* info */}
        <motion.div 
          variants={fadeIn('left', 0.4)}
          initial='hidden'
          animate='show'
          exit='hidden'
          className='flex flex-col w-full xl:max-w-[48%] h=[480px]'
        >
          <div className='flex gap-x-4 xl:gap-x-8 mx-auto xl:mx-0 mb-4'>
          {aboutData.map((item, itemIndex) => {
            return (
              <div
                key={itemIndex}
                className={`${
                  index === itemIndex &&
                    'text-accent after:w-[100%] after:bg-accent after:transition-all after:duration-300'
                  } cursor-pointer capitalize xl:text-lg relative after:w-8 after:h-[2px] after:bg-white after:absolute after:-bottom-1 after:left-0`}                                    
                onClick={() => setIndex(itemIndex)}
              >
              {item.title}
              </div>
            );
          })}
          </div>
          <div className='py-2 xl:py-6 flex flex-col gap-y-2 xl:gap-y-0
          items-center xl:items-start'>
          {aboutData[index].info.map((item, itemIndex) => {
            return (
              <div key={itemIndex} className='flex-1 flex flex-col md:flex-row max-w-max gap-x-2 items-center text-white/60'>
              {/* title */}
              <div className='font-light mb-2 md:mb-0'>{item.title}</div>
              <div className='hidden md:flex'></div>

              {/* Check if the item has a link */}
              {item.link ? (
                <a href={item.link} target='_blank' rel='noopener noreferrer' className='text-blue-400 hover:underline'>
                  {item.stage}
                </a>
             ) : (
                <div>{item.stage}</div>
              )}
              <div className='flex gap-x-4'>
              {/* icons */}
              {Array.isArray(item.icons) ? (
              item.icons.map((icon, iconIndex) => (
                // Wrap each icon with an anchor tag if there is a link
                item.link ? (
                  <a key={iconIndex} href={item.link} target='_blank' rel='noopener noreferrer' className='text-2xl text-white'>
                    {icon}
                  </a>
                ) : (
                  <div key={iconIndex} className='text-2xl text-white'>
                    {icon}
                  </div>
                  )
                  ))
                ) : (
                  // Wrap the single icon component in an array
                  <div className='text-2xl text-white'>{item.icons}</div>
                  )}
                </div>
              </div>
              );
            })}
          </div>
        </motion.div>
      </div>
    </div>
  );
};

export default About;
